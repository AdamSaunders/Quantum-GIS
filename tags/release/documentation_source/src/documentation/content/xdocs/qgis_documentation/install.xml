<?xml version="1.0"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "C:\apache-forrest-0.5.1-bin\context\resources\schema\dtd\document-v12.dtd">
<document>
	<header>
		<title>QGIS Installation Guide</title>
		<subtitle>For Versions 0.0.13 and Higher</subtitle>
		<authors>
			<person name="Gary E. Sherman" email="sherman@mrcc.com"/>
		</authors>
	</header>
	<body>
		<section>
			<title>Introduction</title>
			<p>
    
   This document briefly describes how to build QGIS from the source distribution. 
   The information below is for <strong>version 0.0.13</strong> of QGIS.
   </p>
			<p>
QGIS requires that a number of libraries be installed on your system:
</p>
			<ul>
				<li>Qt</li>
				<li>GDAL</li>
				<li>PostgreSQL (Optional)</li>
				<li>libpq++ (C++ API for PostgreSQL - Optional)</li>
				<li>PostGIS (Optional)</li>
			</ul>
			<p>
Each of these requirements are discussed below. Note that the information given 
below is abstracted from the installation documentation for each of the 
libraries. See the install information for each library to get detailed 
instructions.</p>
			<p>
If you are building QGIS <strong>without PostgreSQL</strong>, skip to the section on

<link href="#gdal">Installing GDAL/OGR</link>.
</p>
		
		</section>
		<section>
			<title>PostgreSQL</title>
			<p>
				<strong>PostgreSQL Versions 7.3 and higher:</strong>
				</p>
				<ol>
					<li>Download PostgreSQL source from <link href="http://www.postgresql.org">www.postgresql.org</link>
					</li>
					<li>Configure PostgreSQL:

					<source>	./configure --prefix=/usr/local </source>
					</li>
					<li>Build and install PostgreSQL using the information provided in the INSTALL file of the PostgreSQL distribution.</li>
					<li>Download the C++ wrapper libpq++ from <link href="http://gborg.postgresql.org/project/libpqpp/projdisplay.php">http://gborg.postgresql.org/project/libpqpp/projdisplay.php</link>
					</li>
					<li>Follow the instructions in the libpq++ README to make and install the library</li>
				</ol>
				<p>
					<strong>PostgreSQL Versions prior to 7.3:</strong>
				</p>
				<ol>
					<li>Download PostgreSQL source from <link href="http://www.postgresql.org">www.postgresql.org</link>
					</li>
					<li>The C++ wrapper libpq++ is bundled with versions prior to 7.3. Use the --with-CXX option to configure PostgreSQL to use the C++ wrapper 
<source>	./configure --prefix=/usr/local --with-CXX</source>
					</li>
					<li>Build and install PostgreSQL using the information provided in the INSTALL file of the PostgreSQL distribution.</li>
				</ol>
				<p>
				<strong>All Versions:</strong>
				</p>
				<ol>
					<li>Create the postgres user and setup the database (following taken from PostgreSQL INSTALL file with modification):
	<source>
As root:
 adduser postgres
 mkdir /usr/local/pgsql/data
 chown postgres /usr/local/pgsql/data
 su - postgres
 cd /usr/local
 ./pgsql/bin/initdb -D /usr/local/pgsql/data
 ./bin/pg_ctl start  -o "-i" -D /usr/local/pgsql/data -l serverlog
 ./pgsql/bin/createdb test
 ./pgsql/bin/psql test
</source>
					</li>
					<li>PostgreSQL should now be running. Logon as the postgres user (or use su - postgres). You should be able to connect to the test database with the command:
<source>
	psql test
</source>
					</li>
					<li>PostgreSQL install is done.</li>
				</ol>
			
		</section>
		<section>
			<title>PostGIS</title>
			<ol>
				<li>Download PostGIS source from <link href="http://postgis.refractions.net">postgis.refractions.net</link>
				</li>
				<li>Untar PostGIS into the contrib subdirectory of the postgresql build directory</li>
				<li>PostGIS provides a manual in the doc/html subdirectory that explains the build process (see the Installation section)</li>
				<li>Follow instructions in the PostGIS manual</li>
				<li>If you will not be using PostgreSQL/PostGIS, you do not need to follow the steps regarding the procedural language extension</li>
				<li>PostGIS library is now installed</li>
			</ol>
		
		</section>
		<section id="gdal">
			
			<title>GDAL/OGR</title>
			<p>The GDAL and OGR libraries provide support for raster and vector data formats. QGIS makes use of both of these libraries (which come bundled in one distribution).
<strong>Note:</strong> A Linux binary of GDAL is available at <link href="http://www.remotesensing.org/gdal">http://www.remotesensing.org/gdal</link>. If you choose to install the binary you will also need to download and unpack the source tree since QGIS needs the header files in order to compile.
</p>
			<p>
To install GDAL/OGR from source:
</p>
<ol>
<li>Download the GDAL distribution from <link href="http://www.remotesensing.org/gdal">http://www.remotesensing.org/gdal</link>
					</li>
					<li>Untar the distribution</li>
					<li>Change to the gdal-x.x.x subdirectory that was created by step 2</li>
					<li>See the documentation in the ./html subdirectory for information on building GDAL.</li>
					<li>Follow the instructions in the <em>Building GDAL From Source</em> section</li>
					<li>Make sure that gdal-config (found in the bin subdirectory where GDAL was installed)
is included in the PATH. If necessary, add the path to gdal-config to the PATH
environment variable. </li>
<ul>
<li>Check the install by running: gdal-config --prefix
</li>
					</ul>
				</ol>
		</section>
		<section>
			<title>Qt</title>
			<p>You must download and install Qt in order to compile QGIS. You may already have Qt on your system. If so, check to see if you have version Qt 3.1 or later.
To install Qt:
</p>
<ol>
<li>Download Qt from <link href="http://www.trolltech.com/developer">http://www.trolltech.com/developer</link> (choose the Qt/X11 Free Edition)</li>
					<li>Unpack the distribution</li>
					<li>Follow directions provided in the distribution directory
doc/html/install-x11.html</li>
					<li>Use whatever configure options you like but make sure you include -thread for use with QGIS. You can configure Qt with minimal options:
<source>./configure -thread</source>
					</li>
					<li>Complete the installation per the instructions provided in the Qt
documentation (see step 3)</li>
				</ol>
		</section>
		<section>
		<title>Building QGIS</title>
		<p>
		After you have installed the required libraries, you are ready to build QGIS. 
		</p>
		<p>
		As of version 0.0.13, QGIS uses GNU Autoconf to configure the software prior
		to building. 
		</p>
		
		<section>
		<title>Quick and Dirty</title>
		<p>If you don't need PostgreSQL support and have installed GDAL ,
		you can configure and build QGIS by changing to the distribution directory
		and typing:
		</p>
<source>./configure
make
make install</source>
		<note>This assumes that the gdal-config program is in
		your PATH</note>
		<p>See the next section for the full configuration instructions.</p>
		</section>
		<section>
		<title>Configuring QGIS</title>
		<p>
		To see the configure options available, change the the QGIS 
		directory and enter:
		</p>
		<source>./configure --help</source>
		
		<p>Among other options, there are three that are important to
		the success of the build:</p>
		<source>
--with-qtdir=DIR              Qt installation directory default=$QTDIR
--with-gdal=path/gdal-config  Full path to 'gdal-config' script,
                              e.g. '--with-gdal=/usr/local/bin/gdal-config'
--with-pg=path/pg_config      PostgreSQL (PostGIS) Support
                              (full path to pg_config)
		</source>
		<section>
		<title>Qt</title>
		<p>The configure script will detect Qt, unless it is installed in a
		non-standard location. Setting the QTDIR environment variable will 
		make ensure that the detection succeeds. You can also specify the
		path using the --with-qtdir option. 
		</p>
		</section>
		<section>
		<title>GDAL</title>
		<p>
		If the gdal-config script is in the PATH, configure will automatically
		detect and configure GDAL support. If not in the path, you can specify
		the full path to gdal-config using the --with-gdal option. For example:</p>
		<p>
		<code>./configure --with-gdal=/usr/mystuff/bin/gdal-config</code>
		</p>
		</section>
		<section>
		<title>PostgreSQL</title>
		<p>
		If the pg_config script is in the PATH, configure will automatically
		detect and configure PostgreSQL support. If not, you can use the
		--with-pg option to specify the full path to pg_config. For example:</p>
		<p>
		<code>./configure --with-pg=/usr/local/psql/bin/pg_config</code>
		</p>
		
		</section>
		<section>
		<title>Example Use of Configure</title>
		<source>
./configure --prefix=/usr/local/qgis 
	--with-gdal=/usr/local/gdal/bin/gdal-config
	--with-pg=/usr/local/psql/bin/pg_config
</source>
<p>This will configure QGIS to use both GDAL and PostgreSQL. QGIS will be
installed in /usr/local/qgis.</p>
		<note>If QTDIR is set and gdal-config and pg_config are both
		in the PATH, there is no need to use the --with-gdal and --with-pg
		options. The configure script will properly detect and configure
		GDAL and PostgreSQL</note>
		</section>
		</section>
		<section>
		<title>Compiling and Installing QGIS</title>
		<p>Once properly configured simply issue the following commands:
		</p>
<source>make
make install
</source>
</section>
		<p>
		<link href="http://sourceforge.net/"><img src="http://sourceforge.net/sflogo.php?group_id=55820&amp;type=1" width="88" height="31" alt="SourceForge.net Logo"/></link>
	
		</p>
		</section>
	</body>
	<!-- <footer>
		<legal>Â© 2003 Gary Sherman</legal>
	</footer> -->
</document>
